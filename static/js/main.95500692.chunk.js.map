{"version":3,"sources":["app_components/portfolio.component.jsx","app_components/search.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Portfolio","props","componentDidMount","connection","WebSocket","sym","p","onmessage","evt","packet","JSON","parse","data","type","s","toFixed","setState","msftPrices","state","concat","msftChange","diff","msftPct","pctChange","tslaPrices","tslaChange","tslaPct","aaplPrices","aaplChange","aaplPct","setInterval","_","isOpen","i","symbols","length","send","stringify","componentWillUnmount","close","ws","readyState","OPEN","price","ogPrice","CardDeck","Card","text","style","backgroundColor","fontSize","width","margin","height","Title","this","Subtitle","Text","slice","Component","Search","search","e","a","tick","target","value","fetch","call","status","json","res","logo","companyName","name","console","log","alert","ticker","yearHigh","className","onChange","getTicker","Button","onClick","src","alt","require","config","App","redirect","event","preventDefault","context","router","history","push","Navbar","variant","Brand","NavLink","to","color","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","rel","href","integrity","crossOrigin","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.95500692.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nconst stocksURL = 'wss://ws.finnhub.io?token=bs3tkvnrh5rbsfggfo6g';\r\n\r\nclass Portfolio extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            symbols: ['MSFT','TSLA', 'AAPL'],\r\n            msftPrices:['n/a'],\r\n            msftChange:[0],\r\n            msftPct:[0],\r\n            tslaPrices: ['n/a'],\r\n            tslaChange:[0],\r\n            tslaPct:[0],\r\n            aaplPrices:['n/a'],\r\n            aaplChange:[0],\r\n            aaplPct:[0]\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.connection = new WebSocket(stocksURL);\r\n        var sym=\"\";\r\n        var p=0;\r\n\r\n        this.connection.onmessage = evt => {\r\n            var packet = JSON.parse(evt.data);\r\n            // console.log(packet)\r\n            if(packet.type === \"trade\"){\r\n                sym = packet.data[0].s;\r\n                p = packet.data[0].p.toFixed(2);\r\n                if(sym===\"MSFT\"){\r\n                    this.setState({\r\n                        msftPrices: this.state.msftPrices.concat(p),\r\n                        msftChange: this.state.msftPrices.concat(this.diff(p,210)),\r\n                        msftPct: this.state.msftPct.concat(this.pctChange(p,210))\r\n                    })\r\n                } else if(sym===\"TSLA\"){\r\n                    this.setState({\r\n                        tslaPrices: this.state.tslaPrices.concat(p),\r\n                        tslaChange: this.state.tslaChange.concat(this.diff(p,1280.22)),\r\n                        tslaPct: this.state.tslaPct.concat(this.pctChange(p,1280.22))\r\n                    })\r\n                } else if(sym==='AAPL'){\r\n                    this.setState({\r\n                        aaplPrices:this.state.aaplPrices.concat(p),\r\n                        aaplChange:this.state.aaplChange.concat(this.diff(p,442.56)),\r\n                        aaplPct: this.state.aaplPct.concat(this.pctChange(p,442.56))\r\n                    })\r\n                }\r\n            }\r\n        };\r\n\r\n        setInterval( _ => {\r\n            if(!this.isOpen(this.connection)) return;\r\n            for(var i=0; i<this.state.symbols.length; i++){\r\n                this.connection.send(JSON.stringify({'type':'subscribe', 'symbol':this.state.symbols[i]}))\r\n            }\r\n        },1000)\r\n    }\r\n\r\n    componentWillUnmount = () =>{\r\n        this.connection.close();\r\n    }\r\n\r\n    isOpen(ws){\r\n        return ws.readyState === ws.OPEN\r\n    }\r\n\r\n    diff(price, ogPrice){\r\n        \r\n        return (price-ogPrice).toFixed(2);\r\n    }\r\n\r\n    pctChange(price, ogPrice){\r\n        return ((100*((price-ogPrice)/ogPrice)).toFixed(2));\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {/* <ul>{ this.state.messages.slice(-1).map( (msg, idx) => <li key={'msg-' + idx }>{ msg }</li> )}</ul> */}\r\n                <CardDeck>\r\n                    <Card text={'black'} style={{backgroundColor: '#00c853',fontSize:'90px', width:'5rem', margin:'3rem', height:'350'}}>\r\n                        <Card.Title style={{fontSize:'90px'}}>{this.state.symbols[0]}</Card.Title>\r\n                        <Card.Subtitle style={{fontSize:'40px'}}>Price bought at: $210.15</Card.Subtitle>\r\n                        <Card.Text style={{fontSize: '40px'}}>Currently Traded Price</Card.Text>\r\n                        <Card.Text>${this.state.msftPrices.slice(-1)}</Card.Text>\r\n                        <Card.Text style={{fontSize: '40px'}}>Total Gain/Loss</Card.Text>\r\n                        <Card.Text>${this.state.msftChange.slice(-1)}</Card.Text>\r\n                        <Card.Text>{this.state.msftPct.slice(-1)}&#37;</Card.Text>\r\n                    </Card>\r\n                    <Card text={'black'} style={{backgroundColor:'#78ff82', fontSize:'90px', width:'10px', margin:'3rem', height:'350'}}>\r\n                        <Card.Title style={{fontSize: '90px'}}>{this.state.symbols[1]}</Card.Title>\r\n                        <Card.Subtitle style={{fontSize:'40px'}}>Price bought at: $1280.22</Card.Subtitle>\r\n                        <Card.Text style={{fontSize: '40px'}}>Currently Traded Price</Card.Text>\r\n                        <Card.Text>${this.state.tslaPrices.slice(-1)}</Card.Text>\r\n                        <Card.Text style={{fontSize: '40px'}}>Total Gain/Loss</Card.Text>\r\n                        <Card.Text>${this.state.tslaChange.slice(-1)}</Card.Text>\r\n                        <Card.Text>{this.state.tslaPct.slice(-1)}&#37;</Card.Text>\r\n                    </Card>\r\n                    <Card text={'black'} style={{backgroundColor:'#78ff82', fontSize:'90px', width:'10px', margin:'3rem', height:'350'}}>\r\n                        <Card.Title style={{fontSize: '90px'}}>{this.state.symbols[2]}</Card.Title>\r\n                        <Card.Subtitle style={{fontSize:'40px'}}>Price bought at: $442.56</Card.Subtitle>\r\n                        <Card.Text style={{fontSize: '40px'}}>Currently Traded Price</Card.Text>\r\n                        <Card.Text>${this.state.aaplPrices.slice(-1)}</Card.Text>\r\n                        <Card.Text style={{fontSize: '40px'}}>Total Gain/Loss</Card.Text>\r\n                        <Card.Text>${this.state.aaplChange.slice(-1)}</Card.Text>\r\n                        <Card.Text>{this.state.aaplPct.slice(-1)}&#37;</Card.Text>\r\n                    </Card>\r\n                </CardDeck>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Portfolio;","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n// import Company from './company.component';\r\nimport { NavLink } from 'react-router-dom';\r\n// import {Link} from 'react-router-dom';\r\n\r\nconst apiBase = 'https://finnhub.io/api/v1/stock/profile2?symbol='\r\n\r\nclass Search extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            ticker:'',\r\n            logo:'',\r\n            companyName:'',\r\n            yearHigh:0\r\n        }\r\n    }\r\n\r\n    getTicker(e){\r\n        this.setState({ticker: e.target.value});\r\n    }\r\n\r\n    search = async(e) => {\r\n        var tick = e.target.value;\r\n        \r\n        // console.log(tick);\r\n\r\n        if(tick){\r\n            const call = await fetch(`${apiBase}${tick}&token=bs3tkvnrh5rbsfggfo6g`);\r\n            if(call.status===200){\r\n                const res = await call.json();\r\n                this.setState({\r\n                    logo: res.logo,\r\n                    companyName: res.name\r\n                });\r\n                console.log(this.state.logo);\r\n                console.log(this.state.companyName);\r\n            } else if(call.status===429){\r\n                alert(\"You have exceeded the free tier limit, please try again later\");\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <input type='text' className='m-1' value={this.state.ticker} onChange={(e) => this.getTicker(e)}/>\r\n            <Button onClick={this.search} value={this.state.ticker}>Submit</Button>\r\n            <div>\r\n                <span><img src={this.state.logo} alt='' height='30px' /></span>\r\n                <span><p>{this.state.companyName}</p></span>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport {NavLink} from 'react-bootstrap'\n// import Button from 'react-bootstrap/Button';\n\nimport Portfolio from './app_components/portfolio.component';\nimport Search from './app_components/search.component';\n// import { Form, FormControl } from 'react-bootstrap';\n\nrequire('dotenv').config();\n//import Search from './app_components/search.componenet';\n\nclass App extends Component {\n  state = {\n    ticker:\"\",\n    redirect:null\n  }\n\n  handleChange(event){\n    this.setState({ticker: event.target.value})\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    console.log(this.state.ticker);\n    // alert(this.state.ticker);\n    this.context.router.history.push('/Submit');\n  }\n\n  render(){\n    return(\n      <Router>\n        <div className = \"App\">\n          {/* <div className = \"App-header\">\n            <Link to='/'>Dashboard</Link>\n            <Link to='/Search'>Search</Link>\n          </div>\n          <Switch>\n            <Route exact path='/'></Route>\n            <Route exact path='/Search' component={Search}></Route>\n          </Switch> */}\n          <Navbar variant='dark' style={{backgroundColor:'#009624', margin:'auto', width:'auto'}}>\n              <Navbar.Brand>\n                <NavLink to='/stockTracker' style={{color:\"black\", fontSize:\"25px\"}}>Stock Viewer</NavLink>\n              </Navbar.Brand>\n              {/* <form inline onSubmit={this.handleSubmit.bind(this)}>\n                <input type='text' placeholder='Search' className='mr-sm-2' value={this.state.ticker} onChange={this.handleChange.bind(this)}/>\n                <button type='submit'>Submit</button>\n              </form> */}\n            {/* <Link to='/'>Home</Link> */}\n            <Link to='/stockTracker/Search' style={{color:\"black\", fontSize:\"25px\"}}>Search</Link>\n            </Navbar>\n            <Switch>\n              <Route path='/' component={Portfolio}/>\n              <Route path='/stockTracker/Search' component={Search}></Route>\n            </Switch>\n          {/* <Portfolio/> */}\n        </div>\n      </Router>\n      );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <link\n  rel=\"stylesheet\"\n  href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n  integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\n  crossOrigin=\"anonymous\"\n/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}